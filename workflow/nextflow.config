params {
   // Input parameters:
   // Note: you MUST set the license to use the MiXCR image (for non-commercial use only - see https://licensing.milaboratories.com/)
    input     	  = "/path/to/samplesList.csv" // path to sample metadata file
    project_name  = "project_name" // name your project
    species       = 'hsa' // species should be one of 'hsa' or 'mmu'
    chain         = "IGH" // chain of interest (default of IGH)
    indir         = "/path/to/fastq" // path to FASTQ files
    outdir        = '/path/to/outdir/bcRflow-out' // path to desired output directory
    is_sc         = false // true if 10X 5' GEX samples, false if bulk
    downsample    = "TRUE" // whether or not to downsample the data to the size of the smallest repertoire
    threshold     = 0.7 // sequence similarity threshold for clonal clustering 
    imgt          = './db/imgt.202214-2.sv8.json' // don't change this 
    mixcr_license = 'ENTER YOUR LICENSE' // paste your MiXCR license here (the string, not the file path)
    custom_config_base = '../configs'
    
   // Resources
   memory  = 32.GB
   threads = 8
   cpus    = 4
   time    = 12.hour // alignment can take anywhere from 2-10+hrs depending on sample size, adjust accordingly

   // Logging
   tracedir = "${params.outdir}/performance-info"
}

process {
    cache = true
    withLabel: all_cpu {
        cpus = params.cpus
    }

    // Specify the MiXCR container:
    // NOTE: the MiXCR Docker Hub container was deprecated, use the GHCR container instead
    withLabel: mixcr {
        container = 'docker://ghcr.io/milaboratory/mixcr/mixcr:latest-develop'
    }

    withLabel: downstream {
        cpus = params.cpus
        //Use the custom R Docker container
        container = 'docker://docker.io/bioinformaticscoreatchildrens/bcrflow:latest'
    }
}

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.tracedir}/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.tracedir}/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.tracedir}/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.tracedir}/pipeline_dag_${trace_timestamp}.svg"
}

includeConfig '${params.custom_config_base}/nfcore_custom.config' // include nf-core custom configs

profiles {
    //automatically sets env var for MiXCR license
    standard {
        process.executor = 'local'
    }
    docker {
        MI_LICENSE=params.mixcr_license
        docker.enabled = true
        singularity.enabled = false
        docker.runOptions = '-u $(id -u):$(id -g)'
    }
    singularity {
        MI_LICENSE=params.mixcr_license
        singularity.enabled = true
        singularity.autoMounts = true
        docker.enabled = false
    }
    slurm {
        MI_LICENSE=params.mixcr_license
        process.executor = 'slurm'
        queue = 'general'
        scratch = 'true'
        singularity.enabled = true
        docker.enabled = false
	    queueSize = 20
    }
    htc { 
      	includeConfig "${params.custom_config_base}/conf/htc.config"
    	MI_LICENSE=params.mixcr_license
    }
}

